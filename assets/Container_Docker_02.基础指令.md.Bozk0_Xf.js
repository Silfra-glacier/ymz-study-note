import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.BHrE6nLq.js";const c=JSON.parse('{"title":"02.基础指令","description":"","frontmatter":{},"headers":[],"relativePath":"Container/Docker/02.基础指令.md","filePath":"Container/Docker/02.基础指令.md"}'),h={name:"Container/Docker/02.基础指令.md"};function n(p,s,k,l,d,r){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="_02-基础指令" tabindex="-1">02.基础指令 <a class="header-anchor" href="#_02-基础指令" aria-label="Permalink to &quot;02.基础指令&quot;">​</a></h1><h2 id="修改镜像名称" tabindex="-1">修改镜像名称 <a class="header-anchor" href="#修改镜像名称" aria-label="Permalink to &quot;修改镜像名称&quot;">​</a></h2><p>可以使用给镜像重新打标签的方式重命名镜像：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">podman</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_image_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REPOSITORY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:new_tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TAG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>这样，镜像就会多出一个新的名称和标签，使用 <code>docker images</code> 即可查看效果，其中，两个镜像的 hash 相同，只是 <code>REPOSITORY</code> 和 <code>TAG</code> 不同。</p><p>如果不需要原本的镜像名称和标签，可删除：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">podman</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rmi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin_image_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REPOSITORY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:origin_tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TAG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>这样只会删除镜像名称和标签，镜像本身不会被删除，使用 <code>docker images</code> 即可查看效果。</p>',8)]))}const E=i(h,[["render",n]]);export{c as __pageData,E as default};
